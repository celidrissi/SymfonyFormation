# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind : # Ajout des variables dans les services
            $restaurantFilePath: '/tmp/tmp.txt'
            $symfonyEnv: '%env(APP_ENV)%'
            #$composerLicense: '%env(key:license:json:file:resolve:COMPOSER_LICENSE)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Repository\UserRepository:
        arguments: # Pour passer en parametre du constructeur
            $registry: '@Doctrine\Persistence\ManagerRegistry' # Le @ signifie qu'il s'agit d'un service

    App\Repository\InMemoryRestaurantRepository:

    App\Repository\RestaurantRepository:
        arguments:
            $registry: '@Doctrine\Persistence\ManagerRegistry'
    
    #App\Repository\RestaurantRepositoryInterface: '@App\Repository\InMemoryRestaurantRepository'
    App\Repository\RestaurantRepositoryInterface: '@App\Repository\RestaurantRepository'